{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chrism\\\\Desktop\\\\react\\\\actividad-heroes-y-villanos-firebase-main\\\\src\\\\crud\\\\Edit.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getDoc, updateDoc, doc, deleteDoc, collection, getDocs } from \"firebase/firestore\";\nimport Swal from 'sweetalert2';\nimport { Link } from 'react-router-dom';\nimport { db } from \"../configFR\";\nimport withReactContent from 'sweetalert2-react-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\n\nconst Edit = () => {\n  _s();\n\n  const [nombre, setnombre] = useState('');\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n\n  const update = async e => {\n    e.preventDefault();\n    const product = doc(db, \"usuarios\", id);\n    const data = {\n      nombre: nombre\n    };\n    await updateDoc(product, data);\n    navigate('/');\n  };\n\n  const getProductById = async id => {\n    const product = await getDoc(doc(db, \"usuarios\", id));\n\n    if (product.exists()) {\n      //console.log(product.data())\n      setnombre(product.data().nombre);\n    } else {\n      console.log('El producto no existe');\n    }\n  };\n\n  useEffect(() => {\n    getProductById(id); // eslint-disable-next-line\n  }, []); //1 - configuramos los hooks\n\n  const [products, setProducts] = useState([]); //2 - referenciamos a la DB firestore\n\n  const productsCollection = collection(db, \"usuarios\"); //3 - Funcion para mostrar TODOS los docs\n\n  const getProducts = async () => {\n    const data = await getDocs(productsCollection); //console.log(data.docs)\n\n    setProducts(data.docs.map(doc => ({ ...doc.data(),\n      id: doc.id\n    }))); //console.log(products)\n  }; //4 - Funcion para eliminar un doc\n\n\n  const deleteProduct = async id => {\n    const productDoc = doc(db, \"usuarios\", id);\n    await deleteDoc(productDoc);\n    getProducts();\n  }; //5 - Funcion de confirmacion para Sweet Alert 2\n\n\n  const confirmDelete = id => {\n    MySwal.fire({\n      title: 'Â¿Elimina el producto?',\n      text: \"Eliminar registro?\",\n      showCancelButton: true,\n      confirmButtonColor: '#d33',\n      cancelButtonColor: '#3085d6',\n      confirmButtonText: 'si borrar'\n    }).then(result => {\n      if (result.isConfirmed) {\n        //llamamos a la fcion para eliminar   \n        deleteProduct(id);\n        Swal.fire('Borrado');\n      }\n    });\n  }; //6 - usamos useEffect\n\n\n  useEffect(() => {\n    getProducts(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Editar Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: update,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Nombre real\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: nombre,\n              onChange: e => setnombre(e.target.value),\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Actualizar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: product.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/edit/${product.id}`,\n                  className: \"btn btn-light\",\n                  children: \"Editar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    confirmDelete(product.id);\n                  },\n                  className: \"btn btn-danger\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 104\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Edit, \"FTgwdZumvWOcsMh1R8uHuG41XGE=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c2 = Edit;\nexport default Edit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"Edit\");","map":{"version":3,"sources":["C:/Users/chrism/Desktop/react/actividad-heroes-y-villanos-firebase-main/src/crud/Edit.js"],"names":["useEffect","useState","useNavigate","useParams","getDoc","updateDoc","doc","deleteDoc","collection","getDocs","Swal","Link","db","withReactContent","MySwal","Edit","nombre","setnombre","navigate","id","update","e","preventDefault","product","data","getProductById","exists","console","log","products","setProducts","productsCollection","getProducts","docs","map","deleteProduct","productDoc","confirmDelete","fire","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { getDoc, updateDoc, doc, deleteDoc, collection, getDocs} from \"firebase/firestore\"\nimport Swal from 'sweetalert2'\nimport { Link } from 'react-router-dom'\nimport { db } from \"../configFR\"\nimport withReactContent from 'sweetalert2-react-content'\nconst MySwal = withReactContent(Swal)\nconst Edit = () => {\n  const [nombre, setnombre] = useState('')\n\n\n    const navigate = useNavigate()    \n    const {id} = useParams()\n\n    const update = async (e) => {\n        e.preventDefault()\n        const product = doc(db, \"usuarios\", id)\n        const data = {nombre: nombre, }\n        await updateDoc(product, data)\n        navigate('/')\n    }\n\n    const getProductById = async (id) => {\n        const product = await getDoc( doc(db, \"usuarios\", id) )\n        if(product.exists()) {\n            //console.log(product.data())\n            setnombre(product.data().nombre)   \n            \n        }else{\n            console.log('El producto no existe')\n        }\n    }\n\n    useEffect( () => {\n        getProductById(id)\n        // eslint-disable-next-line\n    }, [])\n\n    //1 - configuramos los hooks\n  const [products, setProducts] = useState( [] )\n\n  //2 - referenciamos a la DB firestore\n  const productsCollection = collection(db, \"usuarios\")\n\n  //3 - Funcion para mostrar TODOS los docs\n  const getProducts = async ()   => {\n   const data = await getDocs(productsCollection)\n   //console.log(data.docs)\n   setProducts(\n       data.docs.map( (doc) => ( {...doc.data(),id:doc.id}))\n   )\n   //console.log(products)\n  }\n  //4 - Funcion para eliminar un doc\n  const deleteProduct = async (id) => {\n   const productDoc = doc(db, \"usuarios\", id)\n   await deleteDoc(productDoc)\n   getProducts()\n  }\n  //5 - Funcion de confirmacion para Sweet Alert 2\n  const confirmDelete = (id) => {\n    MySwal.fire({\n      title: 'Â¿Elimina el producto?',\n      text: \"Eliminar registro?\",\n      showCancelButton: true,\n      confirmButtonColor: '#d33',\n      cancelButtonColor: '#3085d6',\n      confirmButtonText: 'si borrar'\n    }).then((result) => {\n      if (result.isConfirmed) { \n        //llamamos a la fcion para eliminar   \n        deleteProduct(id)               \n        Swal.fire(\n          'Borrado',\n        )\n      }\n    })    \n  }\n  //6 - usamos useEffect\n  useEffect( () => {\n    getProducts()\n    // eslint-disable-next-line\n  }, [] )\n\n\n    \n\n    return (\n\n        <div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n    <h1>Editar Nombre</h1>\n                 <form onSubmit={update}>\n                    <div className='mb-3'>\n                        <label className='form-label'>Nombre real</label>\n                        <input\n                            value={nombre}\n                            onChange={ (e) => setnombre(e.target.value)} \n                            type=\"text\"\n                            className='form-control'\n                        />\n                    </div>  \n       \n                   \n            \n                    \n                    <button type='submit' className='btn btn-primary'>Actualizar</button>\n                 </form>   \n    </div>\n    <div class=\"col\">\n     <table className='table table-hover'>\n            <thead>\n              <tr>\n                <th>Nombre</th>\n              </tr>\n            </thead>\n            <tbody>\n              { products.map( (product) => (\n                <tr key={product.id}>\n                  <td>{product.nombre}</td>\n\n\n                  <td>\n                 \n                    <Link to={`/edit/${product.id}`} className=\"btn btn-light\">Editar</Link>\n                    <button onClick={ () => { confirmDelete(product.id) } } className=\"btn btn-danger\"><i className=\"fa-solid fa-trash\"></i></button>\n                  </td>\n                </tr>                \n              )) }\n            </tbody>\n          </table>\n    </div>\n  </div>\n  </div>\n        \n    )\n}\n\nexport default Edit"]},"metadata":{},"sourceType":"module"}